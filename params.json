{"name":"Ibd818.github.io","tagline":"Blog","body":"關於python 2.x中文字編碼的簡單說明\r\n======\r\n\r\n1. 如果文件含有非ASCII字符, 在開頭加一行註釋:\r\n# encoding=utf-8\r\n# 如果你的源代碼文件不是UTF-8編碼, 把'utf-8'換成相應的編碼\r\n\r\n否則你會遭遇\r\nSyntaxError: Non-ASCII character\r\n錯誤.\r\n\r\n\r\n2. str類型是字節序列而非字符序列. 它的編碼方式由文件本身的編碼方式或encode時指定的編碼方式決定:\r\n1. 寫在源文件中的str, 編碼方式爲源文件的編碼方式.\r\n2. 從其它文件中讀取的str, 就是那個文件中的字節序列, 不做任何轉換.\r\n3. 使用encode方法得到的str, 其編碼爲指定編碼.\r\n對str使用len, 會返回字節序列的長度:\r\nUTF-8環境下, '文字'的字節序列爲0xe6 0x96 0x87 0xe5 0xad 0x97, len('文字') == 6.\r\nGB18030環境下, '文字'的字節序列爲0xce 0xc4 0xd7 0xd6, len('文字') == 4\r\n\r\n\r\n3. unicode類型是字符序列, 無需關心它內部的編碼方式(可能爲USC-2或USC-4).\r\n無論編碼爲何, len(u'文字') == 2.\r\n\r\n\r\n4. encode的作用是把字符序列編碼成字節序列(unicode -> str), decode的作用是把字節序列解碼成字符序列(str -> unicode). 如果對unicode使用encode或對str使用decode, 會得到錯誤或無意義的結果.\r\n\r\n5. __str__必須返回str類型, __unicode__必須返回unicode類型. 否則會收到TypeError.\r\n\r\n转自v2ex。\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}